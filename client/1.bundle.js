(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[1],{

/***/ "./node_modules/@babel/runtime/helpers/arrayWithHoles.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/arrayWithHoles.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;\n\n//# sourceURL=webpack:///./node_modules/@babel/runtime/helpers/arrayWithHoles.js?");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;\n\n//# sourceURL=webpack:///./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js?");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/nonIterableRest.js":
/*!****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/nonIterableRest.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nmodule.exports = _nonIterableRest;\n\n//# sourceURL=webpack:///./node_modules/@babel/runtime/helpers/nonIterableRest.js?");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/slicedToArray.js":
/*!**************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/slicedToArray.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var arrayWithHoles = __webpack_require__(/*! ./arrayWithHoles */ \"./node_modules/@babel/runtime/helpers/arrayWithHoles.js\");\n\nvar iterableToArrayLimit = __webpack_require__(/*! ./iterableToArrayLimit */ \"./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js\");\n\nvar nonIterableRest = __webpack_require__(/*! ./nonIterableRest */ \"./node_modules/@babel/runtime/helpers/nonIterableRest.js\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;\n\n//# sourceURL=webpack:///./node_modules/@babel/runtime/helpers/slicedToArray.js?");

/***/ }),

/***/ "./node_modules/@iconify/icons-fa-brands/css3-alt.js":
/*!***********************************************************!*\
  !*** ./node_modules/@iconify/icons-fa-brands/css3-alt.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var data = {\n\t\"body\": \"<path d=\\\"M0 32l34.9 395.8L192 480l157.1-52.2L384 32H0zm313.1 80l-4.8 47.3L193 208.6l-.3.1h111.5l-12.8 146.6l-98.2 28.7l-98.8-29.2l-6.4-73.9h48.9l3.2 38.3l52.6 13.3l54.7-15.4l3.7-61.6l-166.3-.5v-.1l-.2.1l-3.6-46.3L193.1 162l6.5-2.7H76.7L70.9 112h242.2z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 384,\n\t\"height\": 512\n};\nexports.__esModule = true;\nexports.default = data;\n\n\n//# sourceURL=webpack:///./node_modules/@iconify/icons-fa-brands/css3-alt.js?");

/***/ }),

/***/ "./node_modules/@iconify/icons-fa-brands/git-alt.js":
/*!**********************************************************!*\
  !*** ./node_modules/@iconify/icons-fa-brands/git-alt.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var data = {\n\t\"body\": \"<path d=\\\"M439.55 236.05L244 40.45a28.87 28.87 0 0 0-40.81 0l-40.66 40.63l51.52 51.52c27.06-9.14 52.68 16.77 43.39 43.68l49.66 49.66c34.23-11.8 61.18 31 35.47 56.69c-26.49 26.49-70.21-2.87-56-37.34L240.22 199v121.85c25.3 12.54 22.26 41.85 9.08 55a34.34 34.34 0 0 1-48.55 0c-17.57-17.6-11.07-46.91 11.25-56v-123c-20.8-8.51-24.6-30.74-18.64-45L142.57 101L8.45 235.14a28.86 28.86 0 0 0 0 40.81l195.61 195.6a28.86 28.86 0 0 0 40.8 0l194.69-194.69a28.86 28.86 0 0 0 0-40.81z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 448,\n\t\"height\": 512\n};\nexports.__esModule = true;\nexports.default = data;\n\n\n//# sourceURL=webpack:///./node_modules/@iconify/icons-fa-brands/git-alt.js?");

/***/ }),

/***/ "./node_modules/@iconify/icons-fa-brands/html5.js":
/*!********************************************************!*\
  !*** ./node_modules/@iconify/icons-fa-brands/html5.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var data = {\n\t\"body\": \"<path d=\\\"M0 32l34.9 395.8L191.5 480l157.6-52.2L384 32H0zm308.2 127.9H124.4l4.1 49.4h175.6l-13.6 148.4l-97.9 27v.3h-1.1l-98.7-27.3l-6-75.8h47.7L138 320l53.5 14.5l53.7-14.5l6-62.2H84.3L71.5 112.2h241.1l-4.4 47.7z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 384,\n\t\"height\": 512\n};\nexports.__esModule = true;\nexports.default = data;\n\n\n//# sourceURL=webpack:///./node_modules/@iconify/icons-fa-brands/html5.js?");

/***/ }),

/***/ "./node_modules/@iconify/icons-fa-brands/node-js.js":
/*!**********************************************************!*\
  !*** ./node_modules/@iconify/icons-fa-brands/node-js.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var data = {\n\t\"body\": \"<path d=\\\"M224 508c-6.7 0-13.5-1.8-19.4-5.2l-61.7-36.5c-9.2-5.2-4.7-7-1.7-8c12.3-4.3 14.8-5.2 27.9-12.7c1.4-.8 3.2-.5 4.6.4l47.4 28.1c1.7 1 4.1 1 5.7 0l184.7-106.6c1.7-1 2.8-3 2.8-5V149.3c0-2.1-1.1-4-2.9-5.1L226.8 37.7c-1.7-1-4-1-5.7 0L36.6 144.3c-1.8 1-2.9 3-2.9 5.1v213.1c0 2 1.1 4 2.9 4.9l50.6 29.2c27.5 13.7 44.3-2.4 44.3-18.7V167.5c0-3 2.4-5.3 5.4-5.3h23.4c2.9 0 5.4 2.3 5.4 5.3V378c0 36.6-20 57.6-54.7 57.6c-10.7 0-19.1 0-42.5-11.6l-48.4-27.9C8.1 389.2.7 376.3.7 362.4V149.3c0-13.8 7.4-26.8 19.4-33.7L204.6 9c11.7-6.6 27.2-6.6 38.8 0l184.7 106.7c12 6.9 19.4 19.8 19.4 33.7v213.1c0 13.8-7.4 26.7-19.4 33.7L243.4 502.8c-5.9 3.4-12.6 5.2-19.4 5.2zm149.1-210.1c0-39.9-27-50.5-83.7-58c-57.4-7.6-63.2-11.5-63.2-24.9c0-11.1 4.9-25.9 47.4-25.9c37.9 0 51.9 8.2 57.7 33.8c.5 2.4 2.7 4.2 5.2 4.2h24c1.5 0 2.9-.6 3.9-1.7s1.5-2.6 1.4-4.1c-3.7-44.1-33-64.6-92.2-64.6c-52.7 0-84.1 22.2-84.1 59.5c0 40.4 31.3 51.6 81.8 56.6c60.5 5.9 65.2 14.8 65.2 26.7c0 20.6-16.6 29.4-55.5 29.4c-48.9 0-59.6-12.3-63.2-36.6c-.4-2.6-2.6-4.5-5.3-4.5h-23.9c-3 0-5.3 2.4-5.3 5.3c0 31.1 16.9 68.2 97.8 68.2c58.4-.1 92-23.2 92-63.4z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 448,\n\t\"height\": 512\n};\nexports.__esModule = true;\nexports.default = data;\n\n\n//# sourceURL=webpack:///./node_modules/@iconify/icons-fa-brands/node-js.js?");

/***/ }),

/***/ "./node_modules/@iconify/icons-fa-brands/react.js":
/*!********************************************************!*\
  !*** ./node_modules/@iconify/icons-fa-brands/react.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var data = {\n\t\"body\": \"<path d=\\\"M418.2 177.2c-5.4-1.8-10.8-3.5-16.2-5.1c.9-3.7 1.7-7.4 2.5-11.1c12.3-59.6 4.2-107.5-23.1-123.3c-26.3-15.1-69.2.6-112.6 38.4c-4.3 3.7-8.5 7.6-12.5 11.5c-2.7-2.6-5.5-5.2-8.3-7.7c-45.5-40.4-91.1-57.4-118.4-41.5c-26.2 15.2-34 60.3-23 116.7c1.1 5.6 2.3 11.1 3.7 16.7c-6.4 1.8-12.7 3.8-18.6 5.9C38.3 196.2 0 225.4 0 255.6c0 31.2 40.8 62.5 96.3 81.5c4.5 1.5 9 3 13.6 4.3c-1.5 6-2.8 11.9-4 18c-10.5 55.5-2.3 99.5 23.9 114.6c27 15.6 72.4-.4 116.6-39.1c3.5-3.1 7-6.3 10.5-9.7c4.4 4.3 9 8.4 13.6 12.4c42.8 36.8 85.1 51.7 111.2 36.6c27-15.6 35.8-62.9 24.4-120.5c-.9-4.4-1.9-8.9-3-13.5c3.2-.9 6.3-1.9 9.4-2.9c57.7-19.1 99.5-50 99.5-81.7c0-30.3-39.4-59.7-93.8-78.4zM282.9 92.3c37.2-32.4 71.9-45.1 87.7-36c16.9 9.7 23.4 48.9 12.8 100.4c-.7 3.4-1.4 6.7-2.3 10c-22.2-5-44.7-8.6-67.3-10.6c-13-18.6-27.2-36.4-42.6-53.1c3.9-3.7 7.7-7.2 11.7-10.7zM167.2 307.5c5.1 8.7 10.3 17.4 15.8 25.9c-15.6-1.7-31.1-4.2-46.4-7.5c4.4-14.4 9.9-29.3 16.3-44.5c4.6 8.8 9.3 17.5 14.3 26.1zm-30.3-120.3c14.4-3.2 29.7-5.8 45.6-7.8c-5.3 8.3-10.5 16.8-15.4 25.4c-4.9 8.5-9.7 17.2-14.2 26c-6.3-14.9-11.6-29.5-16-43.6zm27.4 68.9c6.6-13.8 13.8-27.3 21.4-40.6s15.8-26.2 24.4-38.9c15-1.1 30.3-1.7 45.9-1.7s31 .6 45.9 1.7c8.5 12.6 16.6 25.5 24.3 38.7s14.9 26.7 21.7 40.4c-6.7 13.8-13.9 27.4-21.6 40.8c-7.6 13.3-15.7 26.2-24.2 39c-14.9 1.1-30.4 1.6-46.1 1.6s-30.9-.5-45.6-1.4c-8.7-12.7-16.9-25.7-24.6-39s-14.8-26.8-21.5-40.6zm180.6 51.2c5.1-8.8 9.9-17.7 14.6-26.7c6.4 14.5 12 29.2 16.9 44.3c-15.5 3.5-31.2 6.2-47 8c5.4-8.4 10.5-17 15.5-25.6zm14.4-76.5c-4.7-8.8-9.5-17.6-14.5-26.2c-4.9-8.5-10-16.9-15.3-25.2c16.1 2 31.5 4.7 45.9 8c-4.6 14.8-10 29.2-16.1 43.4zM256.2 118.3c10.5 11.4 20.4 23.4 29.6 35.8c-19.8-.9-39.7-.9-59.5 0c9.8-12.9 19.9-24.9 29.9-35.8zM140.2 57c16.8-9.8 54.1 4.2 93.4 39c2.5 2.2 5 4.6 7.6 7c-15.5 16.7-29.8 34.5-42.9 53.1c-22.6 2-45 5.5-67.2 10.4c-1.3-5.1-2.4-10.3-3.5-15.5c-9.4-48.4-3.2-84.9 12.6-94zm-24.5 263.6c-4.2-1.2-8.3-2.5-12.4-3.9c-21.3-6.7-45.5-17.3-63-31.2c-10.1-7-16.9-17.8-18.8-29.9c0-18.3 31.6-41.7 77.2-57.6c5.7-2 11.5-3.8 17.3-5.5c6.8 21.7 15 43 24.5 63.6c-9.6 20.9-17.9 42.5-24.8 64.5zm116.6 98c-16.5 15.1-35.6 27.1-56.4 35.3c-11.1 5.3-23.9 5.8-35.3 1.3c-15.9-9.2-22.5-44.5-13.5-92c1.1-5.6 2.3-11.2 3.7-16.7c22.4 4.8 45 8.1 67.9 9.8c13.2 18.7 27.7 36.6 43.2 53.4c-3.2 3.1-6.4 6.1-9.6 8.9zm24.5-24.3c-10.2-11-20.4-23.2-30.3-36.3c9.6.4 19.5.6 29.5.6c10.3 0 20.4-.2 30.4-.7c-9.2 12.7-19.1 24.8-29.6 36.4zm130.7 30c-.9 12.2-6.9 23.6-16.5 31.3c-15.9 9.2-49.8-2.8-86.4-34.2c-4.2-3.6-8.4-7.5-12.7-11.5c15.3-16.9 29.4-34.8 42.2-53.6c22.9-1.9 45.7-5.4 68.2-10.5c1 4.1 1.9 8.2 2.7 12.2c4.9 21.6 5.7 44.1 2.5 66.3zm18.2-107.5c-2.8.9-5.6 1.8-8.5 2.6c-7-21.8-15.6-43.1-25.5-63.8c9.6-20.4 17.7-41.4 24.5-62.9c5.2 1.5 10.2 3.1 15 4.7c46.6 16 79.3 39.8 79.3 58c0 19.6-34.9 44.9-84.8 61.4zm-149.7-15c25.3 0 45.8-20.5 45.8-45.8s-20.5-45.8-45.8-45.8c-25.3 0-45.8 20.5-45.8 45.8s20.5 45.8 45.8 45.8z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 512,\n\t\"height\": 512\n};\nexports.__esModule = true;\nexports.default = data;\n\n\n//# sourceURL=webpack:///./node_modules/@iconify/icons-fa-brands/react.js?");

/***/ }),

/***/ "./node_modules/@iconify/icons-fa-brands/sass.js":
/*!*******************************************************!*\
  !*** ./node_modules/@iconify/icons-fa-brands/sass.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var data = {\n\t\"body\": \"<path d=\\\"M301.84 378.92c-.3.6-.6 1.08 0 0zm249.13-87a131.16 131.16 0 0 0-58 13.5c-5.9-11.9-12-22.3-13-30.1c-1.2-9.1-2.5-14.5-1.1-25.3s7.7-26.1 7.6-27.2s-1.4-6.6-14.3-6.7s-24 2.5-25.29 5.9a122.83 122.83 0 0 0-5.3 19.1c-2.3 11.7-25.79 53.5-39.09 75.3c-4.4-8.5-8.1-16-8.9-22c-1.2-9.1-2.5-14.5-1.1-25.3s7.7-26.1 7.6-27.2s-1.4-6.6-14.29-6.7s-24 2.5-25.3 5.9s-2.7 11.4-5.3 19.1s-33.89 77.3-42.08 95.4c-4.2 9.2-7.8 16.6-10.4 21.6c-.4.8-.7 1.3-.9 1.7c.3-.5.5-1 .5-.8c-2.2 4.3-3.5 6.7-3.5 6.7v.1c-1.7 3.2-3.6 6.1-4.5 6.1c-.6 0-1.9-8.4.3-19.9c4.7-24.2 15.8-61.8 15.7-63.1c-.1-.7 2.1-7.2-7.3-10.7c-9.1-3.3-12.4 2.2-13.2 2.2s-1.4 2-1.4 2s10.1-42.4-19.39-42.4c-18.4 0-44 20.2-56.58 38.5c-7.9 4.3-25 13.6-43 23.5c-6.9 3.8-14 7.7-20.7 11.4c-.5-.5-.9-1-1.4-1.5c-35.79-38.2-101.87-65.2-99.07-116.5c1-18.7 7.5-67.8 127.07-127.4c98-48.8 176.35-35.4 189.84-5.6c19.4 42.5-41.89 121.6-143.66 133c-38.79 4.3-59.18-10.7-64.28-16.3c-5.3-5.9-6.1-6.2-8.1-5.1c-3.3 1.8-1.2 7 0 10.1c3 7.9 15.5 21.9 36.79 28.9c18.7 6.1 64.18 9.5 119.17-11.8c61.78-23.8 109.87-90.1 95.77-145.6C386.52 18.32 293-.18 204.57 31.22c-52.69 18.7-109.67 48.1-150.66 86.4c-48.69 45.6-56.48 85.3-53.28 101.9c11.39 58.9 92.57 97.3 125.06 125.7c-1.6.9-3.1 1.7-4.5 2.5c-16.29 8.1-78.18 40.5-93.67 74.7c-17.5 38.8 2.9 66.6 16.29 70.4c41.79 11.6 84.58-9.3 107.57-43.6s20.2-79.1 9.6-99.5c-.1-.3-.3-.5-.4-.8c4.2-2.5 8.5-5 12.8-7.5c8.29-4.9 16.39-9.4 23.49-13.3c-4 10.8-6.9 23.8-8.4 42.6c-1.8 22 7.3 50.5 19.1 61.7c5.2 4.9 11.49 5 15.39 5c13.8 0 20-11.4 26.89-25c8.5-16.6 16-35.9 16-35.9s-9.4 52.2 16.3 52.2c9.39 0 18.79-12.1 23-18.3v.1s.2-.4.7-1.2c1-1.5 1.5-2.4 1.5-2.4v-.3c3.8-6.5 12.1-21.4 24.59-46c16.2-31.8 31.69-71.5 31.69-71.5a201.24 201.24 0 0 0 6.2 25.8c2.8 9.5 8.7 19.9 13.4 30c-3.8 5.2-6.1 8.2-6.1 8.2a.31.31 0 0 0 .1.2c-3 4-6.4 8.3-9.9 12.5c-12.79 15.2-28 32.6-30 37.6c-2.4 5.9-1.8 10.3 2.8 13.7c3.4 2.6 9.4 3 15.69 2.5c11.5-.8 19.6-3.6 23.5-5.4a82.2 82.2 0 0 0 20.19-10.6c12.5-9.2 20.1-22.4 19.4-39.8c-.4-9.6-3.5-19.2-7.3-28.2c1.1-1.6 2.3-3.3 3.4-5C434.8 301.72 450.1 270 450.1 270a201.24 201.24 0 0 0 6.2 25.8c2.4 8.1 7.09 17 11.39 25.7c-18.59 15.1-30.09 32.6-34.09 44.1c-7.4 21.3-1.6 30.9 9.3 33.1c4.9 1 11.9-1.3 17.1-3.5a79.46 79.46 0 0 0 21.59-11.1c12.5-9.2 24.59-22.1 23.79-39.6c-.3-7.9-2.5-15.8-5.4-23.4c15.7-6.6 36.09-10.2 62.09-7.2c55.68 6.5 66.58 41.3 64.48 55.8s-13.8 22.6-17.7 25s-5.1 3.3-4.8 5.1c.5 2.6 2.3 2.5 5.6 1.9c4.6-.8 29.19-11.8 30.29-38.7c1.6-34-31.09-71.4-89-71.1zm-429.18 144.7c-18.39 20.1-44.19 27.7-55.28 21.3C54.61 451 59.31 421.42 82 400c13.8-13 31.59-25 43.39-32.4c2.7-1.6 6.6-4 11.4-6.9c.8-.5 1.2-.7 1.2-.7c.9-.6 1.9-1.1 2.9-1.7c8.29 30.4.3 57.2-19.1 78.3zm134.36-91.4c-6.4 15.7-19.89 55.7-28.09 53.6c-7-1.8-11.3-32.3-1.4-62.3c5-15.1 15.6-33.1 21.9-40.1c10.09-11.3 21.19-14.9 23.79-10.4c3.5 5.9-12.2 49.4-16.2 59.2zm111 53c-2.7 1.4-5.2 2.3-6.4 1.6c-.9-.5 1.1-2.4 1.1-2.4s13.9-14.9 19.4-21.7c3.2-4 6.9-8.7 10.89-13.9c0 .5.1 1 .1 1.6c-.13 17.9-17.32 30-25.12 34.8zm85.58-19.5c-2-1.4-1.7-6.1 5-20.7c2.6-5.7 8.59-15.3 19-24.5a36.18 36.18 0 0 1 1.9 10.8c-.1 22.5-16.2 30.9-25.89 34.4z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 640,\n\t\"height\": 512\n};\nexports.__esModule = true;\nexports.default = data;\n\n\n//# sourceURL=webpack:///./node_modules/@iconify/icons-fa-brands/sass.js?");

/***/ }),

/***/ "./node_modules/@iconify/icons-logos/express.js":
/*!******************************************************!*\
  !*** ./node_modules/@iconify/icons-logos/express.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var data = {\n\t\"body\": \"<path d=\\\"M3.332 115.629V58.648h71.144v-3.333H3.332V3.332h75.642V0H0v118.961h79.64v-3.332H3.333zm140.455-82.307l-29.49 38.821l-28.825-38.82H81.14l31.157 41.32L78.14 118.96h3.999l32.156-41.82l32.323 41.82h4.165l-34.322-44.319l31.323-41.32h-3.998zm16.994 114.963V94.97h.333c2 7.775 5.943 14.023 11.83 18.744c5.887 4.72 13.384 7.081 22.492 7.081c5.887 0 11.108-1.194 15.662-3.582s8.358-5.637 11.413-9.747c3.054-4.11 5.387-8.886 6.998-14.329c1.61-5.442 2.416-11.163 2.416-17.16c0-6.443-.834-12.386-2.5-17.828c-1.666-5.443-4.082-10.164-7.247-14.162c-3.166-3.999-6.998-7.11-11.497-9.33c-4.498-2.222-9.58-3.333-15.245-3.333c-4.332 0-8.358.639-12.079 1.916c-3.721 1.278-7.025 3.082-9.913 5.415a36.674 36.674 0 0 0-7.498 8.247c-2.11 3.166-3.721 6.637-4.832 10.414h-.333V33.322h-3.332v114.963h3.332zm34.655-30.657c-10.44 0-18.827-3.582-25.158-10.746c-6.331-7.164-9.497-17.467-9.497-30.907c0-5.554.778-10.83 2.333-15.828c1.555-4.998 3.804-9.386 6.747-13.162c2.944-3.777 6.582-6.776 10.913-8.997c4.332-2.222 9.22-3.333 14.662-3.333c5.554 0 10.414 1.111 14.579 3.333c4.165 2.221 7.609 5.248 10.33 9.08s4.776 8.22 6.165 13.162c1.388 4.943 2.082 10.191 2.082 15.745c0 4.999-.638 9.97-1.916 14.912c-1.277 4.943-3.249 9.386-5.915 13.33c-2.665 3.942-6.08 7.163-10.246 9.663c-4.166 2.499-9.192 3.748-15.079 3.748zm54.816 1.333V70.477c0-4.665.666-9.22 2-13.662c1.332-4.443 3.387-8.359 6.164-11.746c2.777-3.388 6.303-6.054 10.58-7.998c4.276-1.944 9.358-2.749 15.245-2.416v-3.332c-5.11-.11-9.58.444-13.412 1.666c-3.833 1.222-7.137 2.888-9.914 4.999c-2.777 2.11-4.998 4.581-6.664 7.414a33.15 33.15 0 0 0-3.666 9.08h-.333v-21.16h-3.332v85.64h3.332zm38.154-42.153h71.643c.223-5.887-.36-11.551-1.749-16.994c-1.388-5.443-3.61-10.275-6.664-14.495c-3.055-4.221-6.998-7.609-11.83-10.164c-4.832-2.555-10.58-3.832-17.244-3.832c-4.777 0-9.442 1-13.996 3c-4.554 1.999-8.553 4.914-11.996 8.746c-3.443 3.832-6.22 8.525-8.33 14.08c-2.11 5.553-3.166 11.884-3.166 18.993c0 6.331.722 12.246 2.166 17.744c1.444 5.498 3.665 10.275 6.664 14.329c3 4.054 6.86 7.192 11.58 9.413c4.72 2.222 10.413 3.277 17.078 3.166c9.774 0 17.994-2.75 24.658-8.247c6.665-5.499 10.608-13.246 11.83-23.243h-3.332c-1.444 9.442-5.138 16.523-11.08 21.243c-5.943 4.721-13.412 7.081-22.41 7.081c-6.109 0-11.274-1.055-15.495-3.165c-4.22-2.11-7.664-4.999-10.33-8.664c-2.665-3.666-4.637-7.97-5.914-12.913c-1.278-4.942-1.972-10.302-2.083-16.078zm68.311-3.332h-68.31c.332-5.998 1.443-11.385 3.331-16.161c1.889-4.777 4.36-8.859 7.415-12.246c3.054-3.388 6.609-5.97 10.663-7.748c4.054-1.777 8.414-2.666 13.079-2.666c5.554 0 10.44 1.028 14.662 3.083c4.22 2.055 7.747 4.86 10.58 8.414c2.832 3.554 4.97 7.692 6.414 12.412c1.444 4.721 2.166 9.692 2.166 14.912zm72.477-14.828h3.332c0-9.553-2.777-16.495-8.33-20.827c-5.555-4.332-13.108-6.498-22.66-6.498c-5.332 0-9.83.667-13.496 2c-3.665 1.332-6.664 3.054-8.997 5.164c-2.332 2.11-3.998 4.443-4.998 6.998c-1 2.555-1.5 4.999-1.5 7.331c0 4.665.833 8.386 2.5 11.163c1.666 2.777 4.276 4.943 7.83 6.498c2.444 1.11 5.22 2.11 8.331 3c3.11.888 6.72 1.832 10.83 2.831c3.665.89 7.275 1.778 10.83 2.666c3.554.889 6.692 2.083 9.413 3.582c2.722 1.5 4.943 3.416 6.665 5.749c1.721 2.332 2.582 5.387 2.582 9.163c0 3.666-.86 6.776-2.582 9.33a20.815 20.815 0 0 1-6.581 6.249c-2.666 1.61-5.638 2.776-8.914 3.498c-3.277.722-6.47 1.083-9.58 1.083c-10.108 0-17.856-2.249-23.243-6.747c-5.387-4.499-8.08-11.58-8.08-21.244h-3.333c0 10.775 2.916 18.661 8.747 23.66c5.832 4.998 14.468 7.497 25.909 7.497c3.665 0 7.358-.417 11.08-1.25c3.72-.833 7.053-2.193 9.996-4.082a22.592 22.592 0 0 0 7.164-7.33c1.833-3 2.75-6.665 2.75-10.997c0-4.11-.806-7.442-2.416-9.997c-1.611-2.554-3.721-4.665-6.332-6.331c-2.61-1.666-5.553-2.971-8.83-3.915a516.08 516.08 0 0 0-9.914-2.75a1726.675 1726.675 0 0 0-12.246-3.165c-3.498-.889-6.747-1.944-9.746-3.166c-2.888-1.222-5.193-2.971-6.915-5.248c-1.722-2.277-2.582-5.526-2.582-9.747c0-.777.222-2.166.666-4.165c.444-2 1.5-4.027 3.166-6.082c1.666-2.054 4.22-3.887 7.664-5.498c3.443-1.61 8.164-2.416 14.162-2.416c4.11 0 7.858.445 11.246 1.333c3.388.889 6.304 2.305 8.747 4.249c2.444 1.944 4.332 4.415 5.665 7.414c1.333 3 2 6.665 2 10.997zm77.141 0h3.332c0-9.553-2.776-16.495-8.33-20.827c-5.554-4.332-13.107-6.498-22.66-6.498c-5.331 0-9.83.667-13.495 2c-3.666 1.332-6.665 3.054-8.997 5.164c-2.333 2.11-3.999 4.443-4.999 6.998c-1 2.555-1.499 4.999-1.499 7.331c0 4.665.833 8.386 2.5 11.163c1.665 2.777 4.276 4.943 7.83 6.498c2.444 1.11 5.22 2.11 8.33 3c3.11.888 6.72 1.832 10.83 2.831c3.666.89 7.276 1.778 10.83 2.666c3.555.889 6.692 2.083 9.414 3.582c2.721 1.5 4.943 3.416 6.664 5.749c1.722 2.332 2.583 5.387 2.583 9.163c0 3.666-.861 6.776-2.583 9.33a20.815 20.815 0 0 1-6.58 6.249c-2.667 1.61-5.638 2.776-8.915 3.498c-3.276.722-6.47 1.083-9.58 1.083c-10.108 0-17.855-2.249-23.242-6.747c-5.388-4.499-8.081-11.58-8.081-21.244h-3.332c0 10.775 2.915 18.661 8.747 23.66c5.831 4.998 14.467 7.497 25.908 7.497c3.666 0 7.359-.417 11.08-1.25c3.72-.833 7.053-2.193 9.997-4.082a22.592 22.592 0 0 0 7.164-7.33c1.833-3 2.749-6.665 2.749-10.997c0-4.11-.805-7.442-2.416-9.997c-1.61-2.554-3.72-4.665-6.331-6.331c-2.61-1.666-5.554-2.971-8.83-3.915a516.071 516.071 0 0 0-9.914-2.75a1726.65 1726.65 0 0 0-12.246-3.165c-3.499-.889-6.748-1.944-9.747-3.166c-2.888-1.222-5.193-2.971-6.914-5.248c-1.722-2.277-2.583-5.526-2.583-9.747c0-.777.222-2.166.667-4.165c.444-2 1.5-4.027 3.165-6.082c1.666-2.054 4.221-3.887 7.664-5.498c3.444-1.61 8.164-2.416 14.163-2.416c4.11 0 7.858.445 11.246 1.333c3.388.889 6.303 2.305 8.747 4.249c2.444 1.944 4.332 4.415 5.665 7.414c1.333 3 2 6.665 2 10.997z\\\" fill=\\\"#222\\\"/>\",\n\t\"width\": 512,\n\t\"height\": 149\n};\nexports.__esModule = true;\nexports.default = data;\n\n\n//# sourceURL=webpack:///./node_modules/@iconify/icons-logos/express.js?");

/***/ }),

/***/ "./node_modules/@iconify/icons-logos/redux.js":
/*!****************************************************!*\
  !*** ./node_modules/@iconify/icons-logos/redux.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var data = {\n\t\"body\": \"<path d=\\\"M177.381 169.733c9.447-.978 16.614-9.122 16.288-18.896c-.325-9.773-8.47-17.592-18.243-17.592h-.651c-10.1.326-17.918 8.796-17.592 18.895c.326 4.887 2.28 9.122 5.212 12.054c-11.076 21.828-28.016 37.791-53.426 51.148c-17.266 9.122-35.183 12.38-53.1 10.1c-14.66-1.955-26.062-8.47-33.23-19.222c-10.424-15.963-11.401-33.23-2.605-50.496c6.19-12.38 15.962-21.502 22.152-26.063c-1.303-4.235-3.258-11.402-4.235-16.614c-47.237 34.207-42.35 80.468-28.016 102.295c10.75 16.29 32.577 26.389 56.684 26.389c6.515 0 13.03-.652 19.546-2.28c41.699-8.145 73.299-32.905 91.216-69.718zm57.336-40.397c-24.759-28.995-61.245-44.958-102.944-44.958h-5.212c-2.932-5.864-9.122-9.774-15.963-9.774h-.652C99.848 74.93 92.03 83.4 92.355 93.5c.326 9.773 8.47 17.592 18.243 17.592h.651c7.167-.326 13.357-4.887 15.963-11.077h5.864c24.759 0 48.214 7.167 69.39 21.176c16.288 10.751 28.016 24.76 34.531 41.7c5.538 13.683 5.212 27.04-.652 38.443c-9.121 17.266-24.432 26.714-44.63 26.714c-13.031 0-25.41-3.91-31.926-6.842c-3.583 3.258-10.099 8.47-14.66 11.729c14.009 6.515 28.343 10.099 42.025 10.099c31.274 0 54.404-17.267 63.2-34.533c9.447-18.896 8.795-51.474-15.637-79.165zM69.225 175.27c.326 9.774 8.47 17.592 18.243 17.592h.652c10.099-.325 17.917-8.796 17.591-18.895c-.325-9.774-8.47-17.592-18.243-17.592h-.651c-.652 0-1.63 0-2.28.325c-13.357-22.153-18.895-46.26-16.94-72.323c1.302-19.547 7.818-36.488 19.22-50.497c9.447-12.054 27.69-17.918 40.07-18.243c34.531-.652 49.19 42.351 50.168 59.618c4.235.977 11.402 3.258 16.289 4.887C189.434 27.366 156.857 0 125.584 0c-29.32 0-56.359 21.176-67.11 52.451c-14.985 41.7-5.212 81.771 13.031 113.372c-1.628 2.28-2.606 5.864-2.28 9.448z\\\" fill=\\\"#764ABC\\\"/>\",\n\t\"width\": 256,\n\t\"height\": 244\n};\nexports.__esModule = true;\nexports.default = data;\n\n\n//# sourceURL=webpack:///./node_modules/@iconify/icons-logos/redux.js?");

/***/ }),

/***/ "./node_modules/@iconify/icons-mdi/language-javascript.js":
/*!****************************************************************!*\
  !*** ./node_modules/@iconify/icons-mdi/language-javascript.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var data = {\n\t\"body\": \"<path d=\\\"M3 3h18v18H3V3m4.73 15.04c.4.85 1.19 1.55 2.54 1.55c1.5 0 2.53-.8 2.53-2.55v-5.78h-1.7V17c0 .86-.35 1.08-.9 1.08c-.58 0-.82-.4-1.09-.87l-1.38.83m5.98-.18c.5.98 1.51 1.73 3.09 1.73c1.6 0 2.8-.83 2.8-2.36c0-1.41-.81-2.04-2.25-2.66l-.42-.18c-.73-.31-1.04-.52-1.04-1.02c0-.41.31-.73.81-.73c.48 0 .8.21 1.09.73l1.31-.87c-.55-.96-1.33-1.33-2.4-1.33c-1.51 0-2.48.96-2.48 2.23c0 1.38.81 2.03 2.03 2.55l.42.18c.78.34 1.24.55 1.24 1.13c0 .48-.45.83-1.15.83c-.83 0-1.31-.43-1.67-1.03l-1.38.8z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n\n\n//# sourceURL=webpack:///./node_modules/@iconify/icons-mdi/language-javascript.js?");

/***/ }),

/***/ "./node_modules/@iconify/react/dist/icon.js":
/*!**************************************************!*\
  !*** ./node_modules/@iconify/react/dist/icon.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.InlineIcon = exports.Icon = void 0;\n\nvar _react = _interopRequireDefault(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * Unique id counter\n *\n * @type {number}\n */\nvar idCounter = 0;\n/**\n * Regex used to split dimensions\n *\n * @type {RegExp}\n * @private\n */\n\nvar unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\nvar unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\n/**\n * Attributes used for icon\n *\n * @type {string[]}\n */\n\nvar iconAttributes = ['width', 'height', 'inline', 'hFlip', 'vFlip', 'flip', 'rotate', 'align', 'color', 'box'];\n/**\n * Default attribute values\n *\n * @type {object}\n */\n\nvar defaultAttributes = {\n  left: 0,\n  top: 0,\n  width: 16,\n  height: 16,\n  rotate: 0,\n  hFlip: false,\n  vFlip: false\n};\n/**\n * Add missing properties to icon\n *\n * Important: in PHP version of this library this function is part of Collection class: Collection::addMissingAttributes()\n *\n * JavaScript version uses separate file so this function could be used in React and other components without loading\n * entire Collection class.\n *\n * @param {object} data\n * @return {object}\n */\n\nfunction normalize(data) {\n  var item = Object.assign(Object.create(null), defaultAttributes, data);\n\n  if (item.inlineTop === void 0) {\n    item.inlineTop = item.top;\n  }\n\n  if (item.inlineHeight === void 0) {\n    item.inlineHeight = item.height;\n  }\n\n  if (item.verticalAlign === void 0) {\n    // -0.143 if icon is designed for 14px height,\n    // otherwise assume icon is designed for 16px height\n    item.verticalAlign = item.height % 7 === 0 && item.height % 8 !== 0 ? -0.143 : -0.125;\n  }\n\n  return item;\n}\n/**\n * Get preserveAspectRatio attribute value\n *\n * @param {object} align\n * @return {string}\n * @private\n */\n\n\nfunction getAlignment(align) {\n  var result;\n\n  switch (align.horizontal) {\n    case 'left':\n      result = 'xMin';\n      break;\n\n    case 'right':\n      result = 'xMax';\n      break;\n\n    default:\n      result = 'xMid';\n  }\n\n  switch (align.vertical) {\n    case 'top':\n      result += 'YMin';\n      break;\n\n    case 'bottom':\n      result += 'YMax';\n      break;\n\n    default:\n      result += 'YMid';\n  }\n\n  result += align.slice ? ' slice' : ' meet';\n  return result;\n}\n/**\n * SVG class\n *\n * @see @iconify/json-tools/src/svg.js\n */\n\n\nvar SVG =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Constructor\n   *\n   * @param icon Icon data\n   *  Use Collection.getIconData() to retrieve icon data\n   */\n  function SVG(icon) {\n    _classCallCheck(this, SVG);\n\n    this._item = icon;\n  }\n  /**\n   * Get SVG attributes\n   *\n   * @param {object} props Custom properties (same as query string in Iconify API)\n   * @returns {string}\n   */\n\n\n  _createClass(SVG, [{\n    key: \"getAttributes\",\n    value: function getAttributes(props) {\n      var item = this._item;\n\n      if (_typeof(props) !== 'object') {\n        props = Object.create(null);\n      } // Set data\n\n\n      var align = {\n        horizontal: 'center',\n        vertical: 'middle',\n        slice: false\n      };\n      var transform = {\n        rotate: item.rotate,\n        hFlip: item.hFlip,\n        vFlip: item.vFlip\n      };\n      var style = Object.create(null);\n      var attributes = Object.create(null); // Get width/height\n\n      var inline = props.inline === true || props.inline === 'true' || props.inline === '1';\n      var box = {\n        left: item.left,\n        top: inline ? item.inlineTop : item.top,\n        width: item.width,\n        height: inline ? item.inlineHeight : item.height\n      }; // Transformations\n\n      ['hFlip', 'vFlip'].forEach(function (key) {\n        if (props[key] !== void 0 && (props[key] === true || props[key] === 'true' || props[key] === '1')) {\n          transform[key] = !transform[key];\n        }\n      });\n\n      if (props.flip !== void 0) {\n        props.flip.toLowerCase().split(/[\\s,]+/).forEach(function (value) {\n          switch (value) {\n            case 'horizontal':\n              transform.hFlip = !transform.hFlip;\n              break;\n\n            case 'vertical':\n              transform.vFlip = !transform.vFlip;\n          }\n        });\n      }\n\n      if (props.rotate !== void 0) {\n        var value = props.rotate;\n\n        if (typeof value === 'number') {\n          transform.rotate += value;\n        } else if (typeof value === 'string') {\n          var units = value.replace(/^-?[0-9.]*/, '');\n\n          if (units === '') {\n            value = parseInt(value);\n\n            if (!isNaN(value)) {\n              transform.rotate += value;\n            }\n          } else if (units !== value) {\n            var split = false;\n\n            switch (units) {\n              case '%':\n                // 25% -> 1, 50% -> 2, ...\n                split = 25;\n                break;\n\n              case 'deg':\n                // 90deg -> 1, 180deg -> 2, ...\n                split = 90;\n            }\n\n            if (split) {\n              value = parseInt(value.slice(0, value.length - units.length));\n\n              if (!isNaN(value)) {\n                transform.rotate += Math.round(value / split);\n              }\n            }\n          }\n        }\n      } // Apply transformations to box\n\n\n      var transformations = [],\n          tempValue;\n\n      if (transform.hFlip) {\n        if (transform.vFlip) {\n          transform.rotate += 2;\n        } else {\n          // Horizontal flip\n          transformations.push('translate(' + (box.width + box.left) + ' ' + (0 - box.top) + ')');\n          transformations.push('scale(-1 1)');\n          box.top = box.left = 0;\n        }\n      } else if (transform.vFlip) {\n        // Vertical flip\n        transformations.push('translate(' + (0 - box.left) + ' ' + (box.height + box.top) + ')');\n        transformations.push('scale(1 -1)');\n        box.top = box.left = 0;\n      }\n\n      switch (transform.rotate % 4) {\n        case 1:\n          // 90deg\n          tempValue = box.height / 2 + box.top;\n          transformations.unshift('rotate(90 ' + tempValue + ' ' + tempValue + ')'); // swap width/height and x/y\n\n          if (box.left !== 0 || box.top !== 0) {\n            tempValue = box.left;\n            box.left = box.top;\n            box.top = tempValue;\n          }\n\n          if (box.width !== box.height) {\n            tempValue = box.width;\n            box.width = box.height;\n            box.height = tempValue;\n          }\n\n          break;\n\n        case 2:\n          // 180deg\n          transformations.unshift('rotate(180 ' + (box.width / 2 + box.left) + ' ' + (box.height / 2 + box.top) + ')');\n          break;\n\n        case 3:\n          // 270deg\n          tempValue = box.width / 2 + box.left;\n          transformations.unshift('rotate(-90 ' + tempValue + ' ' + tempValue + ')'); // swap width/height and x/y\n\n          if (box.left !== 0 || box.top !== 0) {\n            tempValue = box.left;\n            box.left = box.top;\n            box.top = tempValue;\n          }\n\n          if (box.width !== box.height) {\n            tempValue = box.width;\n            box.width = box.height;\n            box.height = tempValue;\n          }\n\n          break;\n      } // Calculate dimensions\n      // Values for width/height: null = default, 'auto' = from svg, false = do not set\n      // Default: if both values aren't set, height defaults to '1em', width is calculated from height\n\n\n      var customWidth = props.width ? props.width : null;\n      var customHeight = props.height ? props.height : null;\n      var width, height;\n\n      if (customWidth === null && customHeight === null) {\n        customHeight = '1em';\n      }\n\n      if (customWidth !== null && customHeight !== null) {\n        width = customWidth;\n        height = customHeight;\n      } else if (customWidth !== null) {\n        width = customWidth;\n        height = SVG.calculateDimension(width, box.height / box.width);\n      } else {\n        height = customHeight;\n        width = SVG.calculateDimension(height, box.width / box.height);\n      }\n\n      if (width !== false) {\n        attributes.width = width === 'auto' ? box.width : width;\n      }\n\n      if (height !== false) {\n        attributes.height = height === 'auto' ? box.height : height;\n      } // Add vertical-align for inline icon\n\n\n      if (inline && item.verticalAlign !== 0) {\n        style['vertical-align'] = item.verticalAlign + 'em';\n      } // Check custom alignment\n\n\n      if (props.align !== void 0) {\n        props.align.toLowerCase().split(/[\\s,]+/).forEach(function (value) {\n          switch (value) {\n            case 'left':\n            case 'right':\n            case 'center':\n              align.horizontal = value;\n              break;\n\n            case 'top':\n            case 'bottom':\n            case 'middle':\n              align.vertical = value;\n              break;\n\n            case 'crop':\n              align.slice = true;\n              break;\n\n            case 'meet':\n              align.slice = false;\n          }\n        });\n      } // Generate viewBox and preserveAspectRatio attributes\n\n\n      attributes.preserveAspectRatio = getAlignment(align);\n      attributes.viewBox = box.left + ' ' + box.top + ' ' + box.width + ' ' + box.height; // Generate body\n\n      var body = SVG.replaceIDs(item.body);\n\n      if (props.color !== void 0) {\n        body = body.replace(/currentColor/g, props.color);\n      }\n\n      if (transformations.length) {\n        body = '<g transform=\"' + transformations.join(' ') + '\">' + body + '</g>';\n      }\n\n      if (props.box === true || props.box === 'true' || props.box === '1') {\n        // Add transparent bounding box\n        body += '<rect x=\"' + box.left + '\" y=\"' + box.top + '\" width=\"' + box.width + '\" height=\"' + box.height + '\" fill=\"rgba(0, 0, 0, 0)\" />';\n      }\n\n      return {\n        attributes: attributes,\n        body: body,\n        style: style\n      };\n    }\n    /**\n     * Generate SVG\n     *\n     * @param {object} props Custom properties (same as query string in Iconify API)\n     * @param {boolean} [addExtra] True if extra attributes should be added to SVG.\n     *  Due to lack of functions in JavaScript for escaping attributes, it is your job to make sure key and value are both properly escaped. Default value is false.\n     * @returns {string}\n     */\n\n  }, {\n    key: \"getSVG\",\n    value: function getSVG(props, addExtra) {\n      var attributes = SVG.splitAttributes(props),\n          data = this.getAttributes(attributes.icon);\n      var svg = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"'; // Add extra attributes - assume that their names and values are escaped\n\n      if (addExtra) {\n        Object.keys(attributes.node).forEach(function (attr) {\n          svg += ' ' + attr + '=\"' + attributes.node[attr] + '\"';\n        });\n      } // Add SVG attributes\n\n\n      Object.keys(data.attributes).forEach(function (attr) {\n        svg += ' ' + attr + '=\"' + data.attributes[attr] + '\"';\n      }); // Add style with 360deg transformation to style to prevent subpixel rendering bug\n\n      svg += ' style=\"-ms-transform: rotate(360deg); -webkit-transform: rotate(360deg); transform: rotate(360deg);';\n      Object.keys(data.style).forEach(function (attr) {\n        svg += ' ' + attr + ': ' + data.style[attr] + ';';\n      });\n\n      if (props && props.style !== void 0) {\n        svg += props.style;\n      }\n\n      svg += '\">';\n      svg += data.body + '</svg>';\n      return svg;\n    }\n    /**\n     * Split attributes\n     *\n     * @param props\n     * @return {{icon: {}, node: {}}}\n     */\n\n  }], [{\n    key: \"splitAttributes\",\n    value: function splitAttributes(props) {\n      var result = {\n        icon: Object.create(null),\n        node: Object.create(null)\n      };\n      Object.keys(props).forEach(function (name) {\n        result[iconAttributes.indexOf(name) === -1 ? 'node' : 'icon'][name] = props[name];\n      });\n      return result;\n    }\n    /**\n     * Calculate second dimension when only 1 dimension is set\n     *\n     * @param {string|number} size One dimension (such as width)\n     * @param {number} ratio Width/height ratio.\n     *      If size == width, ratio = height/width\n     *      If size == height, ratio = width/height\n     * @param {number} [precision] Floating number precision in result to minimize output. Default = 100\n     * @return {string|number|null} Another dimension, null on error\n     */\n\n  }, {\n    key: \"calculateDimension\",\n    value: function calculateDimension(size, ratio, precision) {\n      if (ratio === 1) {\n        return size;\n      }\n\n      precision = precision === void 0 ? 100 : precision;\n\n      if (typeof size === 'number') {\n        return Math.ceil(size * ratio * precision) / precision;\n      } // split code into sets of strings and numbers\n\n\n      var split = size.split(unitsSplit);\n\n      if (split === null || !split.length) {\n        return null;\n      }\n\n      var results = [],\n          code = split.shift(),\n          isNumber = unitsTest.test(code),\n          num;\n\n      while (true) {\n        if (isNumber) {\n          num = parseFloat(code);\n\n          if (isNaN(num)) {\n            results.push(code);\n          } else {\n            results.push(Math.ceil(num * ratio * precision) / precision);\n          }\n        } else {\n          results.push(code);\n        } // next\n\n\n        code = split.shift();\n\n        if (code === void 0) {\n          return results.join('');\n        }\n\n        isNumber = !isNumber;\n      }\n    }\n    /**\n     * Replace IDs in SVG output with unique IDs\n     * Fast replacement without parsing XML, assuming commonly used patterns.\n     *\n     * @param {string} body\n     * @return {string}\n     */\n\n  }, {\n    key: \"replaceIDs\",\n    value: function replaceIDs(body) {\n      var regex = /\\sid=\"(\\S+)\"/g,\n          ids = [],\n          match,\n          prefix;\n\n      function strReplace(search, replace, subject) {\n        var pos = 0;\n\n        while ((pos = subject.indexOf(search, pos)) !== -1) {\n          subject = subject.slice(0, pos) + replace + subject.slice(pos + search.length);\n          pos += replace.length;\n        }\n\n        return subject;\n      } // Find all IDs\n\n\n      while (match = regex.exec(body)) {\n        ids.push(match[1]);\n      }\n\n      if (!ids.length) {\n        return body;\n      }\n\n      prefix = 'IconifyId-' + Date.now().toString(16) + '-' + (Math.random() * 0x1000000 | 0).toString(16) + '-'; // Replace with unique ids\n\n      ids.forEach(function (id) {\n        var newID = prefix + idCounter;\n        idCounter++;\n        body = strReplace('=\"' + id + '\"', '=\"' + newID + '\"', body);\n        body = strReplace('=\"#' + id + '\"', '=\"#' + newID + '\"', body);\n        body = strReplace('(#' + id + ')', '(#' + newID + ')', body);\n      });\n      return body;\n    }\n  }]);\n\n  return SVG;\n}();\n/**\n * Create React component with SVG data\n *\n * @param {object} props\n * @param {boolean} inline\n * @return {null|React.Component}\n */\n\n\nfunction component(props, inline) {\n  if (_typeof(props.icon) !== 'object') {\n    return null;\n  } // Split properties into SVG properties and icon properties\n\n\n  var split = SVG.splitAttributes(props),\n      iconProps = split.icon,\n      customAttributes = split.node;\n  delete customAttributes.icon; // Set default inline value\n\n  if (iconProps.inline === void 0) {\n    iconProps.inline = inline;\n  } // Get SVG data\n\n\n  var svg = new SVG(normalize(props.icon));\n  var iconData = svg.getAttributes(iconProps); // Set style\n\n  var style = {\n    transform: 'rotate(360deg)'\n  };\n\n  if (iconData.style['vertical-align'] !== void 0) {\n    style.verticalAlign = iconData.style['vertical-align'];\n  }\n\n  if (props.style !== void 0) {\n    style = Object.assign(style, props.style);\n  } // Generate element attributes\n\n\n  var attributes = Object.assign({\n    xmlns: 'http://www.w3.org/2000/svg',\n    focusable: false,\n    style: style\n  }, customAttributes, iconData.attributes);\n  attributes.dangerouslySetInnerHTML = {\n    __html: iconData.body\n  }; // Generate SVG\n\n  return _react[\"default\"].createElement('svg', attributes, null);\n}\n/**\n * Icon without vertical alignment\n *\n * @param {object} props\n * @return {React.Component}\n * @constructor\n */\n\n\nvar Icon = function Icon(props) {\n  return component(props, false);\n};\n/**\n * Icon with vertical alignment\n *\n * @param {object} props\n * @return {React.Component}\n * @constructor\n */\n\n\nexports.Icon = Icon;\n\nvar InlineIcon = function InlineIcon(props) {\n  return component(props, true);\n};\n/**\n * Default export\n */\n\n\nexports.InlineIcon = InlineIcon;\nvar _default = Icon;\nexports[\"default\"] = _default;\n\n//# sourceURL=webpack:///./node_modules/@iconify/react/dist/icon.js?");

/***/ })

}]);